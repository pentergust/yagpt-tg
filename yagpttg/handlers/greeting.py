"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è.

–û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –ø–µ—Ä–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –±–æ—Ç—É.
–ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø—Ä–æ–π—Ç–∏ –ø—Ä–æ—Å—Ç—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∏ –ø—Ä–∏–Ω—è—Ç—å –ø–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
–∏ —É—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.

–ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∑–∞–Ω–æ—Å–∏—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.
"""

from aiogram import F, Router
from aiogram.filters import CommandStart
from aiogram.types import CallbackQuery, Message

from yagpttg import keyboards, messages
from yagpttg.db import User

router = Router(name="Greeting")

# TODO: –î–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º

@router.message(CommandStart())
async def cmd_start(message: Message, user: User | None) -> None:
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    if user is None:
        await message.answer(messages.GREETING, reply_markup=keyboards.GREETING)
    else:
        await message.answer(messages.START_WORK)

@router.callback_query(F.data=="reg")
async def register_user_call(query: CallbackQuery, user: User | None) -> None:
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    if user is not None:
        return await query.answer("üçì –í—ã —É–∂–µ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.")

    user = await User.create(
        id=query.message.from_user.id,
        first_name=query.message.from_user.first_name,
        last_name=query.message.from_user.first_name
    )

    await query.message.answer(messages.START_WORK)
    await query.answer("üçì –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ.")

